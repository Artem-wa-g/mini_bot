import asyncio
import logging

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="6584575989:AAGifcX4Uj2gWKy_NJJ4ArnoN_dNIBMwtMg", parse_mode="HTML")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


async def keyb():
    kb = [
        [
            types.KeyboardButton(text="–û—Ç–∑—ã–≤—ã")
        ],
        [
            types.KeyboardButton(text="üì≤ –ü—Ä–æ—Ñ–∏–ª—å")
        ],
        [
            types.KeyboardButton(text="üìô –ó–∞–∫–∞–∑—ã"),
            types.KeyboardButton(text="–ü—Ä–∏–º–µ—Ä—ã")
        ],

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )
    return keyboard


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    keyboard = await keyb()

    await message.answer(
        text="<b>–ü—Ä–∏–≤–µ—Ç</b>, <i>–î–æ—Ä–æ–≥–æ–π –ø—É—Ç–Ω–∏–∫!</i> "
             "–¢—ã –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É –ø–æ –¥–∏–∑–∞–π–Ω—É, –≥–¥–µ —Ç–µ–±–µ —Å–¥–µ–ª–∞—é—Ç –Ω–µ–¥–æ—Ä–æ–≥–æ"
             "–ö–æ—Ä–æ—á–µ —Ç—É—Ç –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç.....",
        reply_markup=keyboard
    )


@dp.message(F.text == '–û—Ç–∑—ã–≤—ã')
async def reviews(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="—á—Ç–æ-—Ç–æ")
        ],
        [
            types.KeyboardButton(text="—á—Ç–æ-—Ç–æ")
        ],
        [
            types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        ],

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )
    await message.answer(
        text='üíª –û—Ç–∑—ã–≤—ã',
        reply_markup=keyboard
    )


@dp.message(F.text == 'üì≤ –ü—Ä–æ—Ñ–∏–ª—å')
async def profile(message: types.Message):
    await message.answer(text='üì≤ –ü—Ä–æ—Ñ–∏–ª—å')


@dp.message(F.text == 'üìô –ó–∞–∫–∞–∑—ã')
async def orders(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞",
        callback_data="check")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ï—â–µ –∫–∞–∫–∞—è—Ç–æ",
        callback_data="rrerrre")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ê —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ —Å—Å—ã–ª–∫–∞",
        url="https://www.youtube.com/")
    )
    builder.adjust(1)
    await message.answer(
        text="üìô –ó–∞–∫–∞–∑—ã —Ç—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç",
        reply_markup=builder.as_markup()
    )



@dp.message(F.text == '–ù–∞–∑–∞–¥')
async def profile(message: types.Message):
    keyboard = await keyb()

    await message.answer(
        text="–ù–∞–∑–∞–¥",
        reply_markup=keyboard
    )


@dp.message(F.data == 'check')
async def check(message: types.Message):

    await message.answer(
        text="–≤—ã–≤–æ–¥ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ check"
    )


@dp.message(F.data == 'rrerrre')
async def rrerrre(message: types.Message):

    await message.answer(
        text="–≤—ã–≤–æ–¥ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏"
    )




@dp.message(F.text == '–ü—Ä–∏–º–µ—Ä—ã')
async def profile(message: types.Message, bot: Bot):


    await bot.send_photo(
        chat_id=message.from_user.id,
        caption="–ü—Ä–∏–º–µ—Ä—ã –≤—Å–µ—Ö —Ä–∞–±–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–µ <a href=\"https://www.youtube.com/\">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–µ</a>",
        photo='https://s1.1zoom.ru/big3/114/349146-admin.jpg'
    )


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
